
General Strategy

Particles:
  list of vectors - vector or set
  
Springs:
  list of pairs - map

update()
  for each spring in S
    particlei& = P[spring.i]
    particlej& = P[spring.j]
    forceij = -spring.k * (||particlei.x - particlej.x|| - spring.l) * [(particlej.x - particlei.x) / (||particlej.x - particlei.x||)] - Kb(particlei.velocity * normal - particlej.velocity * normal) * normal
    particlei.force = particlei.force + forceij
    particlej.force = particlej.force - forceij
  end
  for each particle in P
    particle.force += any forces
    particle.velocity += particle.force / particle.mass * (Change in time)
    particle.pos += particle.velocity * (change in time)
    particle.force = (0, 0, 0)
  end

Collisions

Plane defined by (n, o) n - normal, o - point
For a point A, if (A - o) . n = 0 then A is on the plane

if((pt - o) . n != (pt+t - o) . n) then collision


Sphere Collisions

Sphere defined by (o, r), o - point, r - radius
